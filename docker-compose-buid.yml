version: "3.8"
services:
  api: 
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: api
    restart: unless-stopped
    ports:
      - "8000:8000"
    depends_on:
      - db
    volumes:
      - ./api:/var/www/html
    environment:
      - DB_HOST=db
      - DB_PORT=3306
      - DB_DATABASE=bookapi
      - DB_USERNAME=app
      - DB_PASSWORD=password
    networks:
      - challenge


  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: client
    ports:
      - "3000:3000"
    depends_on:
      - api
    networks:
      - challenge

  db:
    image: mysql:latest
    container_name: mysql
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: bookapi
      MYSQL_ROOT_PASSWORD: password
      MYSQL_PASSWORD: password
      MYSQL_USER: app
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - challenge

  nginx:
    image: nginx:alpine
    container_name: nginx
    restart: unless-stopped
    ports:
      - 80:80
      - 443:443
    depends_on:
      - api
      - client
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/cert/self-signed.crt:/etc/nginx/ssl/selfsigned.crt
      - ./nginx/cert/self-signed.key:/etc/nginx/ssl/selfsigned.key
    networks:
      - challenge
volumes:
  db_data:

networks:
  challenge:
    driver: bridge
